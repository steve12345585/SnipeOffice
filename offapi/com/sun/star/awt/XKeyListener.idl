/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is Part of the SnipeOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This file incorporates work covered by the following license notice:
 *
 *   Licensed to the Apache Software Foundation (ASF) under one or more
 *   contributor license agreements. See the NOTICE file distributed
 *   with this work for additional information regarding copyright
 *   ownership. The ASF licenses this file to you under the Apache
 *   License, Version 2.0 (the "License"); you may not use this file
 *   except in compliance with the License. You may obtain a copy of
 *   the License at http://www.apache.org/licenses/LICENSE-2.0 .
 */



 module com {  module sun {  module star {  module awt {


/** makes it possible to receive keyboard events.
 *
 * @see com::sun::star::awt::XKeyHandler That interface is better suited for many purposes. In
 * opposite to this listener, the com::sun::star::awt::XKeyHandler doesn't need to be added on
 * exactly the correct widget. Optionally com::sun::star::awt::XKeyHandler can also consume events.
 *
 * @see com::sun::star::awt::XVclContainer The function getWindows might be helpful to find the
 * correct widget to add the this listener to.
 */
published interface XKeyListener: com::sun::star::lang::XEventListener
{

    /** is invoked when a key has been pressed.
     */
    void keyPressed( [in] com::sun::star::awt::KeyEvent e );


    /** is invoked when a key has been released.
     */
    void keyReleased( [in] com::sun::star::awt::KeyEvent e );

};


}; }; }; };

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */
